name: go-time CI/CD Pipeline

on: 
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      action:
        description: 'This helps choose Terraform action (apply or destroy)'
        required: true
        default: 'apply'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: 'kubectl'
    
    - name: Authenticate Docker with Google Container Registry
      run: gcloud auth configure-docker
    
    - name: Build Docker Image with Google Cloud Build
      run: |
        gcloud builds submit --tag europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-engr-test/go-time-api:latest .

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform Init
      run: terraform init
    
    - name: List Terraform State Resources
      run: terraform state list 

    - name: Create terraform.tfvars
      run: |
        echo 'image           = "europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-engr-test/go-time-api:latest"' >> terraform.tfvars
        echo 'project         = "${{ secrets.GCP_PROJECT_ID }}"' >> terraform.tfvars
        echo 'region          = "${{ secrets.REGION }}"' >> terraform.tfvars

    - name: Terraform Plan
      env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
      run: |
        terraform plan -var-file="terraform.tfvars"

    - name: Terraform Apply or Destroy
      env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
      run: |
        if [ "${{ github.event.inputs.action }}" == "apply" ]; then
          terraform apply -var-file="terraform.tfvars" -auto-approve;
        elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
          terraform destroy -var-file="terraform.tfvars" -auto-approve;
        else
          echo "Invalid action specified: ${{ github.event.inputs.action }}";
          exit 1;
        fi
